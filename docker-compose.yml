version: '3.7'
services:
  etcd:
    image: bitnami/etcd:latest
    restart: always
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - "12379:2379"

  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456

  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /Users/ycvk/GolandProjects/tinybook/tinybook/prometheus.yml:/etc/prometheus/prometheus.yml

  zipkin:
    #    用的是不支持 Kafka 之类的简化版本
    image: openzipkin/zipkin-slim:2.24
    ports:
      - '9411:9411'

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    ports:
      - "3000:3000"

  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true # Enable auto topic creation
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_HEAP_OPTS="-Xmx512m -Xms256m"
volumes:
  kafka_data:
    driver: local